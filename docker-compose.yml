services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 3

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: whisper
      POSTGRES_USER: whisper
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U whisper" ]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./data/input:/app/data/input
      - ./data/input_web:/app/data/input_web
      - ./data/output:/app/data/output
      - ./data/output_parts:/app/data/output_parts
      - ./data/logs:/app/data/logs
    environment:
      - DATABASE_URL=postgresql://whisper:${POSTGRES_PASSWORD}@postgres:5432/whisper
      - REDIS_URL=redis://redis:6379
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG:-False}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    ports:
      - "8001:8000"

  celery-worker:
    build:
      context: ./backend
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
      - backend
    volumes:
      - ./data/input:/app/data/input
      - ./data/input_web:/app/data/input_web
      - ./data/output:/app/data/output
      - ./data/output_parts:/app/data/output_parts
      - ./data/logs:/app/data/logs
    environment:
      - DATABASE_URL=postgresql://whisper:${POSTGRES_PASSWORD}@postgres:5432/whisper
      - REDIS_URL=redis://redis:6379
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    command: [ "celery", "-A", "app.main.celery", "worker", "--loglevel=info", "--hostname=worker1@%h" ]

  celery-beat:
    build:
      context: ./backend
    restart: unless-stopped
    depends_on:
      - redis
      - celery-worker
    environment:
      - REDIS_URL=redis://redis:6379
    command: [ "celery", "-A", "app.main.celery", "beat", "--loglevel=info" ]

  frontend:
    build:
      context: ./frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      - backend
      - frontend
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./data/output:/usr/share/nginx/html/output:ro
    environment:
      - NGINX_HOST=${NGINX_HOST}

volumes:
  postgres_data:
  redis_data:
